#pragma once
#ifndef ALGO_H_INCLUDED
#define ALGO_H_INCLUDED

namespace cy
{
    inline void newline(void)
    {
        std::cout << std::endl;
    }

    inline void otopic(const std::string& s)
    { std::cout << "\n=== " << s << " ===" << std::endl; }

    const int w{35};
    char const b(' ');

    inline void oformat(const std::string& s)
    {
        std::cout << std::setw(cy::w) << std::setfill(cy::b) << s;
    }
    
    auto print = [](const std::string& s, auto const& v){
        cy::oformat(s);
        for(auto& e : v) std::cout << e << cy::b;
        cy::newline();
    };
    
    class IsEven
    {
    public:
        bool operator()(const int& e)
        { return e%2 == 0; }
    }; // class IsEven
    
    inline void func(const int& e)
    {
        std::this_thread::sleep_for(std::chrono::seconds(e));
        cy::
    }
}

#endif // ALGO_H_INCLUDED
